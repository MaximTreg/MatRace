"""empty message

Revision ID: 1edc1a939b11
Revises: b9d6c11fbd3f
Create Date: 2024-12-24 22:18:30.558963

"""
from alembic import op
import sqlalchemy as sa

naming_convention = {
    "ix": 'ix_%(column_0_label)s',
    "uq": "uq_%(table_name)s_%(column_0_name)s",
    "ck": "ck_%(table_name)s_%(column_0_name)s",
    "fk": "fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s",
    "pk": "pk_%(table_name)s"
}


# revision identifiers, used by Alembic.
revision = '1edc1a939b11'
down_revision = 'b9d6c11fbd3f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('groups', schema=None, naming_convention=naming_convention) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('title',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=100),
               nullable=False)
        batch_op.alter_column('statement',
               existing_type=sa.REAL(),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['title'])

    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.alter_column('title',
               existing_type=sa.TEXT(length=60),
               type_=sa.String(length=60),
               existing_nullable=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=sa.TEXT(length=64),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.TEXT(length=120),
               type_=sa.String(length=120),
               existing_nullable=True)
        batch_op.alter_column('password_hash',
               existing_type=sa.TEXT(length=128),
               type_=sa.String(length=128),
               existing_nullable=True)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('groups')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('groups', sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key(None, 'groups', ['groups'], ['id'])
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=128),
               type_=sa.TEXT(length=128),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=sa.TEXT(length=120),
               existing_nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(length=64),
               existing_nullable=True)

    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.alter_column('title',
               existing_type=sa.String(length=60),
               type_=sa.TEXT(length=60),
               existing_nullable=True)

    with op.batch_alter_table('groups', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('statement',
               existing_type=sa.Text(),
               type_=sa.REAL(),
               existing_nullable=True)
        batch_op.alter_column('title',
               existing_type=sa.String(length=100),
               type_=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    # ### end Alembic commands ###
